version: '3.8'
services:
  nginx:
    image: nginx:stable-alpine
    container_name: bookmark-nginx
    restart: always
    ports:
      - '13092:80'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - web
      - backend
    networks:
      - bookmark-network
  web:
    build:
      context: .
      dockerfile: Dockerfile
      target: web
      args:
        # 固定前端端口为13090
        FRONTEND_PORT: 13090
    container_name: bookmark-web
    restart: always
    ports:
      - '13090:13090'
    env_file:
      - apps/web/.env.production
    depends_on:
      - backend
    networks:
      - bookmark-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
      args:
        # 固定后端端口为13091
        BACKEND_PORT: 13091
    container_name: bookmark-backend
    restart: always
    ports:
      - '13091:13091'
    env_file:
      - backend/.env.production
    depends_on:
      - mongo
      - redis
    # volumes:
      # - backend-uploads:/app/backend/uploads
    networks:
      - bookmark-network

  mongo:
    image: mongo:6.0
    container_name: bookmark-mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-example_password}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-bookmark}
    volumes:
      - mongo-data:/data/db
    networks:
      - bookmark-network

  redis:
    image: redis:7
    container_name: bookmark-redis
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --requirepass ${REDIS_PASSWORD:-example_password}
    volumes:
      - redis-data:/data
    networks:
      - bookmark-network

volumes:
  mongo-data:
  redis-data:

networks:
  bookmark-network:
    driver: bridge
